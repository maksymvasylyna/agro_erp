from flask import Blueprint, render_template, redirect, url_for, request, flash
from sqlalchemy.exc import IntegrityError
from extensions import db
from modules.reference.companies.models import Company
from modules.reference.companies.forms import CompanyForm, CompanyFilterForm

companies_bp = Blueprint('companies', __name__, template_folder='templates')

@companies_bp.route('/companies')
def index():
    form = CompanyFilterForm(request.args)
    query = Company.query

    if form.name.data:
        query = query.filter_by(id=form.name.data.id)  # ‚úÖ —Ñ—ñ–ª—å—Ç—Ä –ø–æ –≤–∏–±—Ä–∞–Ω—ñ–π –∫–æ–º–ø–∞–Ω—ñ—ó
    if form.cluster.data:
        query = query.filter_by(cluster_id=form.cluster.data.id)

    companies = query.order_by(Company.name).all()

    items = [
        (
            c.id,
            c.name,
            c.cluster.name if c.cluster else '‚Äî',
            url_for('companies.edit', id=c.id),
            url_for('companies.delete', id=c.id)
        )
        for c in companies
    ]

    return render_template(
        'companies/index.html',
        form=form,
        items=items,
        title='–ü—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞',
        header='üè¢ –ü—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞',
        create_url=url_for('companies.create')
    )

@companies_bp.route('/companies/create', methods=['GET', 'POST'])
def create():
    form = CompanyForm()

    if form.validate_on_submit():
        new_company = Company(
            name=(form.name.data or '').strip(),
            cluster=form.cluster.data  # QuerySelectField –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±‚Äô—î–∫—Ç –∞–±–æ None
        )
        db.session.add(new_company)
        try:
            db.session.commit()
            flash('–ü—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–æ –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ.', 'success')
            return redirect(url_for('companies.index'))
        except IntegrityError:
            db.session.rollback()
            # –°—Ç—Ä–∞—Ö—É—î–º–æ—Å—è –Ω–∞ –≤–∏–ø–∞–¥–æ–∫ –≥–æ–Ω–∫–∏ –∞–±–æ —Ä—ñ–∑–Ω–∏—Ü—ñ –≤ —Ä–µ–≥—ñ—Å—Ç—Ä—ñ
            form.name.errors.append('–ö–æ–º–ø–∞–Ω—ñ—è –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –≤–∂–µ —ñ—Å–Ω—É—î (–ë–î).')

    return render_template(
        'companies/form.html',
        form=form,
        title='–ù–æ–≤–µ –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–æ',
        header='‚ûï –ù–æ–≤–µ –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–æ'
    )

@companies_bp.route('/companies/edit/<int:id>', methods=['GET', 'POST'])
def edit(id):
    company = Company.query.get_or_404(id)
    # –≤–∞–∂–ª–∏–≤–æ: –ø–µ—Ä–µ–¥–∞—Ç–∏ obj_id, —â–æ–± –≤–∞–ª—ñ–¥–∞—Ç–æ—Ä –Ω–µ –≤–≤–∞–∂–∞–≤ –ø–æ—Ç–æ—á–Ω–∏–π –∑–∞–ø–∏—Å –¥—É–±–ª–µ–º
    form = CompanyForm(obj=company, obj_id=company.id)

    if form.validate_on_submit():
        company.name = (form.name.data or '').strip()
        company.cluster = form.cluster.data
        try:
            db.session.commit()
            flash('–ó–º—ñ–Ω–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ.', 'success')
            return redirect(url_for('companies.index'))
        except IntegrityError:
            db.session.rollback()
            form.name.errors.append('–ö–æ–º–ø–∞–Ω—ñ—è –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –≤–∂–µ —ñ—Å–Ω—É—î (–ë–î).')

    return render_template(
        'companies/form.html',
        form=form,
        title='–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞',
        header='‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞'
    )

@companies_bp.route('/companies/delete/<int:id>', methods=['POST'])
def delete(id):
    company = Company.query.get_or_404(id)
    db.session.delete(company)
    db.session.commit()
    flash('–ü—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–æ –≤–∏–¥–∞–ª–µ–Ω–æ.', 'warning')
    return redirect(url_for('companies.index'))
